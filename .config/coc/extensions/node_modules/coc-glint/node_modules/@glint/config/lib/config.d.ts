import { GlintEnvironment } from './environment';
export declare type GlintConfigInput = {
    environment: string | Array<string> | Record<string, unknown>;
    checkStandaloneTemplates?: boolean;
    include?: string | Array<string>;
    exclude?: string | Array<string>;
};
/**
 * This class represents a parsed `.glintrc` file, with methods for interrogating
 * project configuration based on the contents of the file.
 */
export declare class GlintConfig {
    readonly rootDir: string;
    readonly environment: GlintEnvironment;
    readonly checkStandaloneTemplates: boolean;
    private includeMatchers;
    private excludeMatchers;
    constructor(rootDir: string, config?: Record<string, unknown>);
    /**
     * Indicates whether this configuration object applies to the file at the
     * given path.
     */
    includesFile(rawFileName: string): boolean;
    getSynthesizedScriptPathForTS(filename: string): string;
    private buildMatchers;
}
export declare function normalizePath(fileName: string): string;
