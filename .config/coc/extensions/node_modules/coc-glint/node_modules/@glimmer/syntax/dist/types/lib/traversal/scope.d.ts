import * as ASTv1 from '../v1/api';
export declare abstract class TransformScope {
    protected locals: string[];
    hasPartial: boolean;
    usedLocals: {
        [key: string]: boolean;
    };
    constructor(locals: string[]);
    child(node: ASTv1.Node): TransformScope;
    usePartial(): void;
    abstract isLocal(name: string): boolean;
    abstract useLocal(node: ASTv1.Node): void;
    abstract currentUnusedLocals(): string[] | false;
}
export default class RootTransformScope extends TransformScope {
    constructor(node: ASTv1.Node);
    useLocal(node: ASTv1.Node): void;
    isLocal(name: string): boolean;
    currentUnusedLocals(): string[] | false;
}
//# sourceMappingURL=scope.d.ts.map